// Copyright (C) 2025  Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Altera and sold by Altera or its authorized distributors.  Please
// refer to the Altera Software License Subscription Agreements 
// on the Quartus Prime software download page.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "05/09/2025 14:27:58"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          Codificador_Niveis
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module Codificador_Niveis_vlg_vec_tst();
// constants                                           
// general purpose registers
reg A0;
reg A1;
reg A2;
reg A3;
// wires                                               
wire X0;
wire X1;
wire X2;

// assign statements (if any)                          
Codificador_Niveis i1 (
// port map - connection between master ports and signals/registers   
	.A0(A0),
	.A1(A1),
	.A2(A2),
	.A3(A3),
	.X0(X0),
	.X1(X1),
	.X2(X2)
);
initial 
begin 
#1000000 $finish;
end 

// A0
initial
begin
	A0 = 1'b0;
end 

// A1
initial
begin
	A1 = 1'b0;
end 

// A2
initial
begin
	A2 = 1'b0;
end 

// A3
initial
begin
	A3 = 1'b0;
end 
endmodule

